# Generated by sila2.code_generator; sila2.__version__: 0.10.3
from __future__ import annotations

from abc import ABC, abstractmethod
from typing import TYPE_CHECKING

from sila2.server import FeatureImplementationBase, MetadataDict, ObservableCommandInstanceWithIntermediateResponses

from .etoad_types import RunJob_IntermediateResponses, RunJob_Responses

if TYPE_CHECKING:
    from ...server import Server


class EtoadBase(FeatureImplementationBase, ABC):
    parent_server: Server

    def __init__(self, parent_server: Server):
        """

        Sila interface for the etoad platform

        """
        super().__init__(parent_server=parent_server)

    @abstractmethod
    def RunJob(
        self,
        JobFile: str,
        *,
        metadata: MetadataDict,
        instance: ObservableCommandInstanceWithIntermediateResponses[RunJob_IntermediateResponses],
    ) -> RunJob_Responses:
        """
        Adds a job for etoad to do


        :param JobFile: the job file for etoad to run

        :param metadata: The SiLA Client Metadata attached to the call
        :param instance: The command instance, enabling sending status updates to subscribed clients

        :return:

            - Termination: Termination message


        """
        pass
